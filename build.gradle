/*
 * Copyright (c) 2019-2022 VMware Inc. or its affiliates, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
  //NB: stdlib version is defined by this plugin's version
	alias(libs.plugins.kotlin.jvm)
	alias(libs.plugins.kotlin.dokka)
	alias(libs.plugins.artifactory) apply false
}

//NOTE: reactor dependency versions are now defined in gradle.properties

configure(rootProject)  { project ->
	apply plugin: 'kotlin'
	apply from: "gradle/dokka.gradle"
	apply from: "gradle/publishing.gradle"
	apply from: "gradle/releaser.gradle"

	description = 'Kotlin extensions for Project Reactor'
	group = 'io.projectreactor.kotlin'

	repositories {
		mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/releases/" }
		maven { url "https://maven-eclipse.github.io/maven" }
		if (version.endsWith('-SNAPSHOT')) {
			maven { url 'https://repo.spring.io/snapshot' }
		}
		maven { url 'https://repo.spring.io/milestone' }
	}

  compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
  }

  compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
  }

  tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions.jvmTarget = "1.8"
	kotlinOptions.freeCompilerArgs = ["-Xjsr305=strict"]
  }

	dependencies {
		api libs.reactor.core

		compileOnly libs.reactor.test

		compileOnly libs.reactor.extra
		testImplementation libs.reactor.extra

		compileOnly libs.reactor.adapter
		testImplementation libs.reactor.adapter
		compileOnly libs.rxJava2
		testImplementation libs.rxJava2

		//NB: stdlib version is defined by the kotlin jvm plugin's version
		compileOnly libs.kotlin.stdlib
		testImplementation libs.kotlin.stdlib

		testImplementation libs.reactor.test
		testImplementation libs.junit4
		testImplementation libs.assertj
	}
}
